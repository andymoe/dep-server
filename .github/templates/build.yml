#@ load("@ytt:data", "data")
name: #@ data.values.name + " build"

#! "on" must be in quotes because it is a truthy in ytt
"on":
  workflow_dispatch:
    inputs:
      VERSION:
        required: true
  repository_dispatch:
    types: [ build ]

env:
  DEP_NAME: #@ data.values.name
  VERSION: ${{ github.event.client_payload.version }}

jobs:
  #@yaml/text-templated-strings
  build-(@= data.values.name @):
    runs-on: ubuntu-18.04
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15

    - name: Set Env Vars
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        fi

    - name: Get upstream dependency
      id: get
      uses: ./actions/get-upstream-dependency
      with:
        name: "${{ env.DEP_NAME }}"
        version: "${{ env.VERSION }}"

    - name: Build
      id: build
      uses: ./actions/build-dependency
      with:
        name: "${{ env.DEP_NAME }}"
        version: "${{ env.VERSION }}"
        url: "${{ steps.get.outputs.uri }}"
        sha256: "${{ steps.get.outputs.sha256 }}"

    - name: Upload dependency
      id: upload
      run: |
        artifact_path="${{ steps.build.outputs.artifact-path }}"
        filename="$(basename "${artifact_path}")"

        aws s3 cp "${artifact_path}" "s3://${{ secrets.DEPS_BUCKET }}/deps/${{ env.DEP_NAME }}/${filename}"

        url="https://deps.paketo.io/${{ env.DEP_NAME }}/${filename}"
        echo "::set-output name=dependency-url::${url}"

    - name: Test
      uses: ./actions/test-dependency
      with:
        name: "${{ env.DEP_NAME }}"
        version: "${{ env.VERSION }}"
        dependency_url: "${{ steps.upload.outputs.dependency-url }}"
        mixins: #@ data.values.mixins
        required_dependency: #@ data.values.required_dependency

    - name: Upload dependency metadata
      run: |
        stacks=
        cat >metadata.json <<-EOF
        {
          "name": "${{ env.DEP_NAME }}",
          "version": "${{ env.VERSION }}",
          "sha256": "${{ steps.build.outputs.sha256 }}",
          "uri": "${{ steps.upload.outputs.dependency-url }}",
          "stacks": (@= data.values.stacks @),
          "source": "${{ steps.get.outputs.uri }}",
          "source_sha256": "${{ steps.get.outputs.sha256 }}",
          "deprecation_date": "${{ steps.get.outputs.deprecation-date }}"
        }
        EOF

        cat metadata.json
