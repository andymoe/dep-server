name: go get new versions

on:
  workflow_dispatch: {}

jobs:
  check-go:
    name: Check for new versions
    runs-on: ubuntu-latest
    steps:
    # - name: Turnstyle
    #   uses: softprops/turnstyle@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Set up Cloud SDK
    #   uses: google-github-actions/setup-gcloud@master
    #   with:
    #     project_id: ${{ secrets.GCP_PROJECT }}
    #     service_account_key: ${{ secrets.GAE_KEY }}
    #
    - name: Get Known Versions
      id: known-versions
      run: |
        echo "set-output::known-versions=''"

    - name: Get New Versions
      id: get-new-versions
      run: |
        #!/usr/bin/env bash
        set -euo pipefail

        go build -o /entrypoint "./actions/list-new-upstream-dependency-versions/entrypoint/main.go"

        upstream_versions="$(/entrypoint \
          --github-token "${{ secrets.GITHUB_TOKEN }}" \
          --name "go"
        )"

        new_versions="$(jq -n --argjson upstream_versions "$upstream_versions" \
        --argjson known_versions "${{ steps.known-versions.outputs.known-versions }}" '$upstream_versions-$known_versions')"

        upstream_versions="${upstream_versions//'%'/'%25'}"
        upstream_versions="${upstream_versions//$'\n'/'%0A'}"
        upstream_versions="${upstream_versions//$'\r'/'%0D'}"

        new_versions="${new_versions//'%'/'%25'}"
        new_versions="${new_versions//$'\n'/'%0A'}"
        new_versions="${new_versions//$'\r'/'%0D'}"

        echo "::set-output name=upstream-versions::${upstream_versions}"
        echo "::set-output name=new-versions::${new_versions}"

        rm -f /entrypoint

    - name: Trigger Builds
      run: |
        new_versions="${{ steps.get-new-versions.outputs.new-versions }}"
        for version in $(echo "${new_versions}" | jq -r .[]); do
          echo curl -X POST \
            https://api.github.com/repos/${{ env.GITHUB_REPOSITORY }}/actions/workflows \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{ \
                  \"event_type\": \"build\", \
                  \"client_payload\": { \
                    \"data\": { \
                      \"name\": \"go\", \
                      \"version\": \"${version}\" \
                     } \
                   } \
                 }"
        done

    # - name: Updates Known Versions
    #   run: |
    #     echo "${{ steps.get-new-versions.outputs.upstream-versions }}" > known_versions
    #     gsutil cp known_versions "gs://dependency-ci-artifacts/known-versions/go"
